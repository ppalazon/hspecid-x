// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package hsid_x_ctrl_reg_reg_pkg;

  // Address widths within the block
  parameter int BlockAw = 4;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////

  typedef struct packed {
    struct packed {
      logic        q;
    } idle;
    struct packed {
      logic        q;
    } ready;
    struct packed {
      logic        q;
    } done;
    struct packed {
      logic        q;
    } clear;
  } hsid_x_ctrl_reg_reg2hw_control_reg_t;

  typedef struct packed {
    logic [31:0] q;
  } hsid_x_ctrl_reg_reg2hw_threshold_reg_t;

  typedef struct packed {
    struct packed {
      logic        d;
      logic        de;
    } start;
    struct packed {
      logic        d;
      logic        de;
    } idle;
    struct packed {
      logic        d;
      logic        de;
    } ready;
    struct packed {
      logic        d;
      logic        de;
    } done;
    struct packed {
      logic        d;
      logic        de;
    } clear;
  } hsid_x_ctrl_reg_hw2reg_control_reg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } hsid_x_ctrl_reg_hw2reg_status_reg_t;

  // Register -> HW type
  typedef struct packed {
    hsid_x_ctrl_reg_reg2hw_control_reg_t control; // [35:32]
    hsid_x_ctrl_reg_reg2hw_threshold_reg_t threshold; // [31:0]
  } hsid_x_ctrl_reg_reg2hw_t;

  // HW -> register type
  typedef struct packed {
    hsid_x_ctrl_reg_hw2reg_control_reg_t control; // [11:2]
    hsid_x_ctrl_reg_hw2reg_status_reg_t status; // [1:0]
  } hsid_x_ctrl_reg_hw2reg_t;

  // Register offsets
  parameter logic [BlockAw-1:0] HSID_X_CTRL_REG_CONTROL_OFFSET = 4'h 0;
  parameter logic [BlockAw-1:0] HSID_X_CTRL_REG_STATUS_OFFSET = 4'h 4;
  parameter logic [BlockAw-1:0] HSID_X_CTRL_REG_THRESHOLD_OFFSET = 4'h 8;

  // Register index
  typedef enum int {
    HSID_X_CTRL_REG_CONTROL,
    HSID_X_CTRL_REG_STATUS,
    HSID_X_CTRL_REG_THRESHOLD
  } hsid_x_ctrl_reg_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] HSID_X_CTRL_REG_PERMIT [3] = '{
    4'b 0001, // index[0] HSID_X_CTRL_REG_CONTROL
    4'b 0001, // index[1] HSID_X_CTRL_REG_STATUS
    4'b 1111  // index[2] HSID_X_CTRL_REG_THRESHOLD
  };

endpackage

